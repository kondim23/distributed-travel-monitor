Κ24:      Προγραμματισμός Συστήματος - 1η Εργασία, Εαρινό Εξάμηνο 2021 
Προθεσμία Υποβολής: Παρασκευή 26 Μαρτίου, 23:59    
Εισαγωγή 
Στην εργασία αυτή θα υλοποιήσετε ένα πρόγραμμα που θα δέχεται, θα επεξεργάζεται, θα καταγράφει και θα 
απαντάει ερωτήματα για εμβολιασμούς πολιτών. Συγκεκριμένα, θα υλοποιήσετε ένα σύνολο δομών (bloom 
filters, linked lists, skip lists) που επιτρέπουν την εισαγωγή και επερωτήσεις μεγάλου όγκου εγγραφών τύπου 
citizenRecord. Αν και τα δεδομένα της άσκησης θα προέρχονται από αρχεία, τελικά όλες οι εγγραφές 
θα αποθηκεύονται μόνο στην κύρια μνήμη.  
Bloom Filter – Περιγραφή Δομής  
Ένα  bloom  filter  (βλ.  https://en.wikipedia.org/wiki/Bloom_filter)  είναι  μία  συμπαγής  δομή  η  οποία 
χρησιμοποιείται για τον έλεγχο της ύπαρξης ενός στοιχείου σε ένα σύνολο.  Αναλυτικότερα, χρησιμοποιώντας 
το bloom filter για ένα δεδομένο στοιχείο, μπορούμε να εξάγουμε ένα από τα εξής συμπεράσματα.  Είτε ότι 
(I) το στοιχείο σίγουρα δεν ανήκει στο σύνολο, ή ότι (ii) το στοιχείο είναι πιθανόν να ανήκει στο σύνολο, 
αλλά δεν γνωρίζουμε με σιγουριά. 
  
Δηλαδή το bloom filter μπορεί, σε ορισμένες περιπτώσεις, να απαντήσει θετικά ότι ένα στοιχείο ανήκει στο 
σύνολο, ακόμα κι όταν δεν ανήκει (false positive).  Αντίθετα, η αρνητική  απάντηση  είναι πάντα  έγκυρη, 
δηλαδή όταν το bloom filter υποδεικνύει πως ένα στοιχείο δεν ανήκει στο σύνολο, το στοιχείο αυτό σίγουρα 
δεν ανήκει.  Με αυτόν τον τρόπο, το bloom filter κάνει μία υπερεκτίμηση των στοιχείων του συνόλου. Η 
πιθανότητα λάθους (σε περίπτωση θετικής απάντησης) αυξάνεται όσο προστίθενται στοιχεία στο σύνολο.   
 
Ένα bloom filter αναπαρίσταται ως ένας πίνακας από bits M  θέσεων (αρχικοποιημένος με 0), και συνοδεύεται 
από K hash functions. Ακολουθούν οι βασικές πράξεις που υποστηρίζει και το πως υλοποιούνται: 
 
1. Για να εισάγουμε ένα στοιχείο s στο σύνολο, εφαρμόζουμε κάθε μία από αυτές τις K hash functions στο 
εν λόγω στοιχείο. Αυτές θα επιστρέψουν Κ θέσεις στον πίνακα (που κάποιες πιθανόν να συμπίπτουν).  
Έπειτα, σε κάθε μία από αυτές τις θέσεις θέτουμε το αντίστοιχο bit σε 1. 
2. Για να ελέγξουμε αν ένα στοιχείο s  ανήκει στο σύνολο, εφαρμόζουμε κάθε μία από αυτές τις Κ   hash 
functions στο εν λόγω στοιχείο.   Αν σε κάθε μία από τις Κ θέσεις που μας επιστρέφουν υπάρχουν 1, τότε 
το στοιχείο s (πιθανόν) να ανήκει στο σύνολο.  Διαφορετικά (αν υπάρχει έστω κι ένα 0), σίγουρα το 
στοιχείο δεν ανήκει στο σύνολο.    
 
Παράδειγμα  Έστω Μ=16, Κ=3, και hash1(), hash2(), hash3() οι τρεις hash functions που μας έχουν δοθεί.  Ο 
πίνακας των bits αρχικά θα είναι:  00 00 00 00 00 00 00 00.   
 
Έστω ότι εισάγουμε διαδοχικά τα στοιχεία s1, s2, s3, για τα οποία έχουμε:  
hash1(s1) mod 16 = 3                             hash1(s2) mod 16 = 10                        hash1(s3) mod 16 = 2  
hash2(s1) mod 16 = 7                             hash2(s2) mod 16 = 1           hash2(s3) mod 16 = 4  
hash3(s1) mod 16 = 11                           hash3(s2) mod 16 = 7           hash3(s3) mod 16 = 2  
 
 Bit array==> 00 01 00 01 00 01 00 00          ==>01 01 00 01 00 11 00 00       ==>01 11 10 01 00 11 00 00 
 
Έστω ότι έπειτα, ελέγχουμε την ύπαρξη των στοιχείων s4, s5, s3, για τα οποία έχουμε:  
hash1(s4) mod 16 = 5    hash1(s5) mod 16 = 2    hash1(s3) mod 16 = 2  
hash2(s4) mod 16 = 6    hash2(s5) mod 16 = 10    hash2(s3) mod 16 = 4  
hash3(s4) mod 16 = 1    hash3(s5) mod 16 = 11    hash3(s3) mod 16 = 2  
 
Bit array==> 01 11 10 01 00 11 00 00         ==>01 11 10 01 00 11 00 00               ==>01 11 10 01 00 11 00 00 
 
Answer: no                                  Answer: yes                                                                     Answer: yes 
 
Στη περίπτωση του s5, έχουμε ένα false positive αφού το στοιχείο φαίνεται πως ανήκει στο σύνολο, ενώ στην 
πραγματικότητα δεν ανήκει.  Οι υπόλοιπες δύο απαντήσεις είναι έγκυρες. 
 
 
Skip List – Περιγραφή Δομής  
 
Μια skip list είναι μια probabilistic δομή δεδομένων που επιτρέπει O(log n) πολυπλοκότητα αναζήτησης 
καθώς και O(log n) πολυπλοκότητα εισαγωγής εντός μιας ταξινομημένης λίστας n στοιχείων. Έτσι μπορεί 
να  αποκτήσει  τις  καλύτερες  δυνατότητες  ενός  ταξινομημένου  πίνακα  (για  αναζήτηση)  διατηρώντας 
παράλληλα μια δομή τύπου συνδεδεμένης λίστας που επιτρέπει την εισαγωγή, η οποία δεν είναι δυνατή σε 
έναν πίνακα. Η γρήγορη αναζήτηση καθίσταται δυνατή διατηρώντας μια συνδεδεμένη ιεραρχία λιστών, με 
κάθε  διαδοχική  λίστα  να  παραλείπει  λιγότερα  στοιχεία  από  την  προηγούμενη.    Μπορείτε  να  μάθετε 
περισσότερες  πληροφορίες  για  αυτήν  την  δομή  δεδομένων  στο  https://en.wikipedia.org/wiki/Skip_list. 
Επίσης  υπάρχουν  και  πολλά  video-tutorials  στο  YouTube  όπως  αυτό  στο 
https://www.youtube.com/watch?v=UGaOXaXAM5M. 
 
 
A) Η εφαρμογη  (75%) 
 
Η εφαρμογή θα ονομάζεται vaccineMonitor και θα χρησιμοποιείται ως εξής: 
 
./vaccineMonitor -c citizenRecordsFile –b bloomSize 
 
όπου: 
- Η παράμετρος  bloomSize καθορίζει το μέγεθος του bloom filter σε *bytes*.  Ενδεικτικό μέγεθος του 
bloom filter για τα δεδομένα της άσκησης θα είναι της τάξης των 100Kbytes.  
- To citizenRecordsFile (ή κάποιο άλλο όνομα αρχείου) είναι ένα αρχείο που περιέχει μια σειρά από 
εγγραφές  πολιτών  προς  επεξεργασία.  Κάθε  γραμμή  του  αρχείου  αυτού  περιγράφει  την  κατάσταση 
εμβολιασμού ενός πολίτη για κάποια συγκεκριμένη ίωση.   Για παράδειγμα αν τα περιεχόμενα του αρχείου 
είναι: 
 
889 John Papadopoulos Greece 52 COVID-19 YES 27-12-2020 
889 John Papadopoulos Greece 52 Η1Ν1 ΝΟ 
         776 Maria Tortellini Italy 36 SARS-1 NO 
         125 Jon Dupont USA 76 H1N1 YES 30-10-2020  
  
σημαίνει  πως  έχουμε  τέσσερις  εγγραφές  που  περιγράφουν  τρεις  πολίτες  σε  τρεις  διαφορετικές  χώρες 
(Ελλάδα, Ιταλία, ΗΠΑ).  YES υποδεικνύει πως ο πολίτης έχει εμβολιαστεί (στην ημερομηνία που ακολουθεί) 
ενώ το  NO το αντίθετο.  Συγκεκριμένα, μια εγγραφή είναι μια γραμμή ASCII κειμένου που αποτελείται από τα 
εξής στοιχεία με αυτή τη σειρά:  
- citizenID:   μια συμβολοσειρά (μπορεί να έχει και ένα μόνο ψηφίο) που καθορίζει την κάθε τέτοια 
εγγραφή.   
- firstName: μια συμβολοσειρά που αποτελείται από γράμματα χωρίς κενά.    
- lastName: μια συμβολοσειρά που αποτελείται από γράμματα χωρίς κενά. 
- country: μια συμβολοσειρά που αποτελείται από γράμματα χωρίς κενά. 
- age: ένας θετικός (>0), ακέραιος <= 120. 
- virusName:  μια συμβολοσειρά που αποτελείται από γράμματα, αριθμούς, και ενδεχομένως και μια 
παύλα “-” αλλά χωρίς κενά. 
- YES ή NΟ: υποδεικνύει αν ο πολίτης έχει κάνει το εμβόλιο κατά τον συγκεκριμένο ιό. 
